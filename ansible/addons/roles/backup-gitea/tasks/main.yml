---
- name: Gitea-Backup | Include required vars
  include_vars: vars.yml
  tags:
    - gitea-backup

- name: Gitea-Backup | Create directories
  file: 
    path: "{{ item }}"
    state: directory
  with_items:
    - /opt/gitea/backups
  tags:
    - gitea-backup
  become: yes

- name: Gitea-Backup | Create backup directory in container
  command: "{{ docker_compose }} exec server mkdir -p /data/gitea/backups"
  args:
    chdir: /opt/gitea/
  tags:
    - gitea-backup

- name: Gitea-Backup | Create backup archive 
  command: "{{ docker_compose }} exec -u git -w /data/gitea/backups server /app/gitea/gitea dump -c /data/gitea/conf/app.ini"
  args:
    chdir: /opt/gitea/
  tags:
    - gitea-backup

- name: Gitea-Backup | Create pg-dump as Gitea Backup is not working
  shell: "{{ docker_compose }} exec -u postgres db pg_dump -U gitea gitea > /opt/gitea/backups/gitea-$(date +%F_%T).sql"
  args:
    chdir: /opt/gitea/
  tags:
    - gitea-backup

- name: Gitea-Backup | Get backups
  find:
    paths: /opt/gitea/backups
  register: backups
  tags:
    - gitea-backup

- name: Gitea-Backup | Change owner of backup files
  file:
    state: directory
    path: /opt/gitea/backups
    recurse: yes
    owner: "{{ username }}"
  become: yes
  tags:
    - gitea-backup

- name: Gitea-Backup | Create local backup folder
  local_action:
    module: file
    state: directory
    path: "{{ local_backup_dir }}"
  tags:
    - gitea-backup

- name: Gitea-Backup | Fetch backup to local machine
  fetch:
    src: "{{ item.path }}"
    dest: "{{ local_backup_dir }}/{{ item.path | basename }}"
    flat: yes
  with_items:
    - "{{ backups.files }}"
  become: no
  tags:
    - gitea-backup

- name: Gitea-Backup | Remove remote backup
  file:
    path: "{{ item.path }}"
    state: absent
  with_items:
    - "{{ backups.files }}"
  become: yes
  tags:
    - gitea-backup
